/* This file is part of COVISE.

   You can use it under the terms of the GNU Lesser General Public License
   version 2.1 or later, see lgpl-2.1.txt.

 * License: LGPL 2+ */

#ifndef _QEMBED_1804289383
#define _QEMBED_1804289383
#include <qimage.h>
#include <q3dict.h>
static const QRgb fileimport_data[] = {
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x1000000, 0x4000000, 0x9000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x1b000000, 0x12000000, 0xb000000,
    0x7000000, 0x5000000, 0x3000000, 0x1000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1000000, 0x6000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x21000000, 0xff000000, 0x12000000, 0xa000000, 0x3000000,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1000000, 0x5000000, 0xff000000, 0xff000000, 0x2c000000, 0x33000000, 0x3a000000,
    0x3e000000, 0x40000000, 0x41000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x29000000, 0x16000000, 0x7000000, 0x1000000, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x1000000, 0x4000000, 0xff000000, 0x18000000, 0x25000000, 0x2a000000, 0x28000000, 0x24000000, 0x24000000, 0x25000000, 0x28000000, 0x33000000,
    0xff000000, 0xff000000, 0xff000000, 0x3c000000, 0x1f000000, 0x9000000, 0x1000000, 0x0, 0x0, 0x0, 0x1000000, 0x4000000, 0x8000000, 0xd000000,
    0x15000000, 0x1e000000, 0x1f000000, 0x1a000000, 0x12000000, 0xd000000, 0xb000000, 0xb000000, 0x10000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x40000000,
    0x21000000, 0x9000000, 0x1000000, 0x0, 0x0, 0x1000000, 0x6000000, 0xff26190e, 0xff271c11, 0xff271c11, 0xff271a0f, 0x28000000, 0x1d000000, 0x10000000,
    0x8000000, 0x4000000, 0x3000000, 0x4000000, 0x8000000, 0x15000000, 0x2b000000, 0x3e000000, 0x41000000, 0x32000000, 0x19000000, 0x7000000, 0x1000000, 0x0,
    0x0, 0x7000000, 0xff3b2714, 0xfff4ad6a, 0xfffec280, 0xfffec27f, 0xfffdb773, 0xff3b2714, 0x2c000000, 0x19000000, 0xf000000, 0xc000000, 0xb000000, 0xb000000,
    0xe000000, 0x15000000, 0x20000000, 0x27000000, 0x25000000, 0x1a000000, 0xd000000, 0x4000000, 0x0, 0x0, 0x0, 0xff3b2714, 0xffe5a566, 0xfffecb93,
    0xfffed39a, 0xfffece93, 0xfffec88b, 0xfff6b675, 0xff3b2714, 0xff150f09, 0xff150f09, 0xff150f09, 0xff150f09, 0xff150f09, 0xff150f09, 0xff150f09, 0xff150f09, 0x25000000,
    0x1a000000, 0xe000000, 0x6000000, 0x2000000, 0x1000000, 0x0, 0x83b2714, 0xff3b2714, 0xfffec385, 0xfffed59c, 0xfffece92, 0xfffec280, 0xfffcb269, 0xfff9ac62,
    0xfff8ac62, 0xfff8ac62, 0xfff8ac62, 0xfff8ac62, 0xfff8ac62, 0xfff8ac62, 0xfff8ac62, 0xfff8ac62, 0xfff8ac62, 0xff3b2714, 0x2a000000, 0x19000000, 0xe000000, 0xb000000,
    0x9000000, 0x0, 0x283b2714, 0xff3d2815, 0xfffec888, 0xfffed199, 0xfffec282, 0xffeea059, 0xff80532c, 0xff4b3119, 0xff4a3019, 0xff4a3019, 0xff4a3019, 0xff452c17,
    0xff402915, 0xff3c2714, 0xff372312, 0xff322011, 0xff2e1d0f, 0xff291a0e, 0xff25170c, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x0, 0x533b2714, 0xff46301b,
    0xfffec888, 0xfffeca8f, 0xfffdb56e, 0xffa86f3c, 0xff53504d, 0xffffffff, 0xfff7f7f7, 0xfff5f5f5, 0xfff1f1f1, 0xffeaeaea, 0xffe3e3e3, 0xffdddddc, 0xffd6d6d5, 0xffd0d0ce,
    0xffc8c8c7, 0xffc2c2c1, 0xffbbbbba, 0xffb4b4b3, 0xffafafaf, 0xffaeaeae, 0xff343434, 0x0, 0x653b2714, 0xff563d25, 0xfffec685, 0xfffec182, 0xfff2a55c, 0xff4a3019,
    0xffc8c8c7, 0xffe7e7e7, 0xffe4e4e4, 0xffe1e1e1, 0xffd9d9d8, 0xffd1d1d0, 0xffc7c7c6, 0xffa7a7a7, 0xff898989, 0xffb0b0af, 0xff929291, 0xff3e3e3e, 0xff2b2b2b, 0xff797977,
    0xff818180, 0xff464645, 0xff151515, 0x0, 0x753b2714, 0xff5f452a, 0xfffec283, 0xfffbb269, 0xffc38954, 0xff58534e, 0xfff2f2f2, 0xffe2e2e1, 0xffeaeae9, 0xffebebea,
    0xffe3e3e3, 0xffdddddb, 0xffb8b8b6, 0xff606060, 0xff838383, 0xff5c5c5b, 0xff2b2b2b, 0xffececec, 0xff4c4c4c, 0xff232323, 0xff3d3d3c, 0xff7a7a7a, 0xd6212121, 0x20000000,
    0x7f3b2714, 0xfe785a3a, 0xfffeb972, 0xffea9e58, 0xff6f4f2f, 0xff8f8e8c, 0xffd4d4d3, 0xffe1e1e0, 0xffe9e9e8, 0xffe7e7e6, 0xffe5e5e3, 0xffdededd, 0xff9f9f9e, 0xff3c3c3c,
    0xffececec, 0xffd1d1d1, 0xff6e6e6e, 0xffb5b5b5, 0xff959595, 0xff848484, 0xffcfcfcf, 0xffe9e9e9, 0xff333333, 0x40000000, 0x7c3b2714, 0xff694d31, 0xfffeb469, 0xffbe8550,
    0xff5d564f, 0xffe4e4e3, 0xffd5d5d4, 0xffe0e0df, 0xffe5e5e4, 0xffe2e2e1, 0xffdddddc, 0xffd8d8d6, 0xffcfcfce, 0xff636363, 0xff5c5c5c, 0xffb8b8b8, 0xffb3b3b3, 0xffaaaaaa,
    0xffb5b5b5, 0xffc3c3c3, 0xffd2d2d2, 0xff525252, 0xa1000000, 0x0, 0x793b2714, 0xff594027, 0xfff3a45b, 0xff684a2d, 0xff888888, 0xffcacac9, 0xffd4d4d3, 0xffdddddc,
    0xffdcdcdb, 0xffd9d9d8, 0xffd5d5d4, 0xffd0d0cf, 0xffafafae, 0xff303030, 0xff717171, 0xffb7b7b7, 0xff9b9b9b, 0xff303030, 0xff5b5b5b, 0xffeeeeee, 0xffd5d5d5, 0xff9a9a9a,
    0xcb000000, 0x20000000, 0x6f3b2714, 0xff46301a, 0xffb57740, 0xff55504c, 0xffdddddc, 0xffcacaca, 0xffcfcfce, 0xffd4d4d3, 0xffd2d2d1, 0xffd0d0cf, 0xffcdcdcb, 0xffc8c8c7,
    0xff444444, 0xffececec, 0xffd1d1d1, 0xffa9a9a9, 0xff303030, 0xff565655, 0xff4a4a4a, 0xff8e8e8e, 0xffdadada, 0xffd1d1d1, 0xffeaeaea, 0xcf282828, 0x463b2714, 0xff3b2714,
    0xff442c17, 0xff919191, 0xffb7b7b6, 0xffbdbdbb, 0xffc3c3c1, 0xffc7c7c5, 0xffc8c8c6, 0xffc6c6c5, 0xffc3c3c2, 0xffbfbfbe, 0xff323231, 0xff4c4c4c, 0xff8b8b8b, 0xffb7b7b7,
    0xff595959, 0xff515151, 0xff3a3a3a, 0xff8a8a8a, 0xffcfcfcf, 0xff929292, 0xff4b4b4b, 0xcf131313, 0x363b2714, 0xff0b0704, 0xff6d6864, 0xffc8c8c7, 0xffadadac, 0xffb3b3b2,
    0xffb6b6b5, 0xffb9b9b7, 0xffbbbbba, 0xffbabab9, 0xffb6b6b5, 0xffb3b3b2, 0xff989897, 0xff2a2a29, 0xff606060, 0xffc6c6c6, 0xffeeeeee, 0xff8e8e8e, 0xff8a8a8a, 0xffd9d9d9,
    0xffb8b8b8, 0xff757575, 0xc2000000, 0x20000000, 0x93b2714, 0xff171716, 0xff919191, 0xff9a9a9a, 0xff999998, 0xff9c9c9b, 0xff9f9f9d, 0xff9f9f9d, 0xff9f9f9d, 0xff9d9d9b,
    0xff9a9a99, 0xff979796, 0xff939393, 0xff474747, 0xffc7c7c7, 0xffd5d5d5, 0xffd5d5d5, 0xffdadada, 0xffd0d0d0, 0xffb4b4b4, 0xffb8b8b8, 0xff515151, 0x82000000, 0x0,
    0x0, 0xff131313, 0xff323232, 0xff2b2b2b, 0xff2c2c2b, 0xff2d2d2c, 0xff2d2d2d, 0xff2d2d2d, 0xff2d2d2d, 0xff2d2d2c, 0xff2c2c2b, 0xff2b2b2b, 0xff1f1f1f, 0xff7a7a7a,
    0xffe9e9e9, 0xff525252, 0xff9a9a9a, 0xffd1d1d1, 0xff898989, 0xff5e5e5e, 0xffc8c8c8, 0xffdfdfdf, 0xff343434, 0x40000000, 0x0, 0x19000000, 0x33000000, 0x44000000,
    0x4b000000, 0x4c000000, 0x4c000000, 0x4c000000, 0x4c000000, 0x4c000000, 0x4c000000, 0x4c000000, 0x62000000, 0xd2212121, 0xff333333, 0xa6000000, 0xd2000000, 0xffeaeaea,
    0xff4c4c4c, 0xc9000000, 0x88000000, 0xff666666, 0xbf262626, 0x20000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x20000000, 0x40000000, 0x0, 0x20000000, 0xcf282828, 0xcf131313, 0x20000000, 0x0, 0x40000000,
    0x20000000, 0x0
};

/* Generated by qembed */
static const QRgb fileopen_data[] = {
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x1000000, 0x4000000, 0x9000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x1b000000, 0x12000000, 0xb000000,
    0x7000000, 0x5000000, 0x3000000, 0x1000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1000000, 0x6000000,
    0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x21000000, 0xff000000, 0x12000000, 0xa000000, 0x3000000,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1000000, 0x5000000, 0xff000000, 0xff000000, 0x2c000000, 0x33000000, 0x3a000000,
    0x3e000000, 0x40000000, 0x41000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x29000000, 0x16000000, 0x7000000, 0x1000000, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x1000000, 0x4000000, 0xff000000, 0x18000000, 0x25000000, 0x2a000000, 0x28000000, 0x24000000, 0x24000000, 0x25000000, 0x28000000, 0x33000000,
    0xff000000, 0xff000000, 0xff000000, 0x3c000000, 0x1f000000, 0x9000000, 0x1000000, 0x0, 0x0, 0x0, 0x1000000, 0x4000000, 0x8000000, 0xd000000,
    0x15000000, 0x1e000000, 0x1f000000, 0x1a000000, 0x12000000, 0xd000000, 0xb000000, 0xb000000, 0x10000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x40000000,
    0x21000000, 0x9000000, 0x1000000, 0x0, 0x0, 0x1000000, 0x6000000, 0xff26190e, 0xff271c11, 0xff271c11, 0xff271a0f, 0x28000000, 0x1d000000, 0x10000000,
    0x8000000, 0x4000000, 0x3000000, 0x4000000, 0x8000000, 0x15000000, 0x2b000000, 0x3e000000, 0x41000000, 0x32000000, 0x19000000, 0x7000000, 0x1000000, 0x0,
    0x0, 0x7000000, 0xff3b2714, 0xfff4ad6a, 0xfffec280, 0xfffec27f, 0xfffdb773, 0xff3b2714, 0x2c000000, 0x19000000, 0xf000000, 0xc000000, 0xb000000, 0xb000000,
    0xe000000, 0x15000000, 0x20000000, 0x27000000, 0x25000000, 0x1a000000, 0xd000000, 0x4000000, 0x0, 0x0, 0x0, 0xff3b2714, 0xffe5a566, 0xfffecb93,
    0xfffed39a, 0xfffece93, 0xfffec88b, 0xfff6b675, 0xff3b2714, 0xff150f09, 0xff150f09, 0xff150f09, 0xff150f09, 0xff150f09, 0xff150f09, 0xff150f09, 0xff150f09, 0x25000000,
    0x1a000000, 0xe000000, 0x6000000, 0x2000000, 0x1000000, 0x0, 0x83b2714, 0xff3b2714, 0xfffec385, 0xfffed59c, 0xfffece92, 0xfffec280, 0xfffcb269, 0xfff9ac62,
    0xfff8ac62, 0xfff8ac62, 0xfff8ac62, 0xfff8ac62, 0xfff8ac62, 0xfff8ac62, 0xfff8ac62, 0xfff8ac62, 0xfff8ac62, 0xff3b2714, 0x2a000000, 0x19000000, 0xe000000, 0xb000000,
    0x9000000, 0x0, 0x283b2714, 0xff3d2815, 0xfffec888, 0xfffed199, 0xfffec282, 0xffeea059, 0xff80532c, 0xff4b3119, 0xff4a3019, 0xff4a3019, 0xff4a3019, 0xff452c17,
    0xff402915, 0xff3c2714, 0xff372312, 0xff322011, 0xff2e1d0f, 0xff291a0e, 0xff25170c, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x0, 0x533b2714, 0xff46301b,
    0xfffec888, 0xfffeca8f, 0xfffdb56e, 0xffa86f3c, 0xff53504d, 0xffffffff, 0xfff7f7f7, 0xfff5f5f5, 0xfff1f1f1, 0xffeaeaea, 0xffe3e3e3, 0xffdddddc, 0xffd6d6d5, 0xffd0d0ce,
    0xffc8c8c7, 0xffc2c2c1, 0xffbbbbba, 0xffb4b4b3, 0xffafafaf, 0xffaeaeae, 0xff343434, 0x0, 0x653b2714, 0xff563d25, 0xfffec685, 0xfffec182, 0xfff2a55c, 0xff4a3019,
    0xffc8c8c7, 0xffe7e7e7, 0xffe4e4e4, 0xffe1e1e1, 0xffd9d9d8, 0xffd1d1d0, 0xffc7c7c6, 0xffc0c0bf, 0xffb8b8b7, 0xffb0b0af, 0xffa7a7a6, 0xff9e9e9d, 0xff959595, 0xff8b8b89,
    0xff818180, 0xff5e5e5d, 0xff191919, 0x0, 0x753b2714, 0xff5f452a, 0xfffec283, 0xfffbb269, 0xffc38954, 0xff58534e, 0xfff2f2f2, 0xffe2e2e1, 0xffeaeae9, 0xffebebea,
    0xffe3e3e3, 0xffdddddb, 0xffd3d3d1, 0xffcacac9, 0xffc1c1c0, 0xffb8b8b7, 0xffafafad, 0xffa5a5a3, 0xff9b9b9a, 0xff8e8e8d, 0xff7b7b79, 0xff363635, 0x5b000000, 0x0,
    0x7f3b2714, 0xfe785a3a, 0xfffeb972, 0xffea9e58, 0xff6f4f2f, 0xff8f8e8c, 0xffd4d4d3, 0xffe1e1e0, 0xffe9e9e8, 0xffe7e7e6, 0xffe5e5e3, 0xffdededd, 0xffd5d5d4, 0xffcdcdcc,
    0xffc4c4c2, 0xffbabab9, 0xffb1b1b0, 0xffa7a7a6, 0xff9e9e9c, 0xff8c8c8b, 0xff6d6d6c, 0xff000000, 0x51000000, 0x0, 0x7c3b2714, 0xff694d31, 0xfffeb469, 0xffbe8550,
    0xff5d564f, 0xffe4e4e3, 0xffd5d5d4, 0xffe0e0df, 0xffe5e5e4, 0xffe2e2e1, 0xffdddddc, 0xffd8d8d6, 0xffcfcfce, 0xffc8c8c7, 0xffc0c0be, 0xffb7b7b6, 0xffaeaead, 0xffa4a4a3,
    0xff979796, 0xff818180, 0xff282827, 0x78000000, 0x42000000, 0x0, 0x793b2714, 0xff594027, 0xfff3a45b, 0xff684a2d, 0xff888888, 0xffcacac9, 0xffd4d4d3, 0xffdddddc,
    0xffdcdcdb, 0xffd9d9d8, 0xffd5d5d4, 0xffd0d0cf, 0xffc9c9c8, 0xffc2c2c1, 0xffb9b9b8, 0xffb2b2b1, 0xffa9a9a8, 0xffa0a09e, 0xff90908f, 0xff5e5e5c, 0xff151514, 0x52000000,
    0x30000000, 0x0, 0x6f3b2714, 0xff46301a, 0xffb57740, 0xff55504c, 0xffdddddc, 0xffcacaca, 0xffcfcfce, 0xffd4d4d3, 0xffd2d2d1, 0xffd0d0cf, 0xffcdcdcb, 0xffc8c8c7,
    0xffc1c1c0, 0xffbbbbba, 0xffb3b3b2, 0xffacacab, 0xffa3a3a2, 0xff9a9a98, 0xff818181, 0xff363635, 0x7f000000, 0x42000000, 0x21000000, 0x0, 0x463b2714, 0xff3b2714,
    0xff442c17, 0xff919191, 0xffb7b7b6, 0xffbdbdbb, 0xffc3c3c1, 0xffc7c7c5, 0xffc8c8c6, 0xffc6c6c5, 0xffc3c3c2, 0xffbfbfbe, 0xffb9b9b7, 0xffb3b3b2, 0xffacacab, 0xffa5a5a4,
    0xff9d9d9b, 0xff8d8d8c, 0xff676766, 0xff000000, 0x54000000, 0x30000000, 0x14000000, 0x0, 0x363b2714, 0xff0b0704, 0xff6d6864, 0xffc8c8c7, 0xffadadac, 0xffb3b3b2,
    0xffb6b6b5, 0xffb9b9b7, 0xffbbbbba, 0xffbabab9, 0xffb6b6b5, 0xffb3b3b2, 0xffaeaead, 0xffa9a9a7, 0xffa2a2a1, 0xff9d9d9c, 0xff919190, 0xff7f7f7e, 0xff2c2c2b, 0x71000000,
    0x41000000, 0x21000000, 0xa000000, 0x0, 0x93b2714, 0xff171716, 0xff919191, 0xff9a9a9a, 0xff999998, 0xff9c9c9b, 0xff9f9f9d, 0xff9f9f9d, 0xff9f9f9d, 0xff9d9d9b,
    0xff9a9a99, 0xff979796, 0xff939393, 0xff90908f, 0xff8b8b8a, 0xff8a8a88, 0xff7d7d7c, 0xff5a5a58, 0xff141413, 0x50000000, 0x30000000, 0x14000000, 0x5000000, 0x0,
    0x0, 0xff131313, 0xff323232, 0xff2b2b2b, 0xff2c2c2b, 0xff2d2d2c, 0xff2d2d2d, 0xff2d2d2d, 0xff2d2d2d, 0xff2d2d2c, 0xff2c2c2b, 0xff2b2b2b, 0xff2a2a2a, 0xff282828,
    0xff272727, 0xff262625, 0xff252524, 0xff101010, 0x57000000, 0x3e000000, 0x1f000000, 0xa000000, 0x2000000, 0x0, 0x0, 0x19000000, 0x33000000, 0x44000000,
    0x4b000000, 0x4c000000, 0x4c000000, 0x4c000000, 0x4c000000, 0x4c000000, 0x4c000000, 0x4c000000, 0x4c000000, 0x4c000000, 0x4c000000, 0x4c000000, 0x4b000000, 0x48000000,
    0x3b000000, 0x26000000, 0x11000000, 0x4000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0
};

static const QRgb filesave_data[] = {
    0x0, 0x0, 0x0, 0x0, 0x1000000, 0xff6b6b6b, 0xff000000, 0x14000000, 0xa000000, 0x4000000, 0x2000000, 0x1000000, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3000000, 0xff000000,
    0xffc1c1c1, 0xff3f3f3f, 0xff4a4a4a, 0xff717171, 0x15000000, 0xa000000, 0x4000000, 0x2000000, 0x1000000, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x1000000, 0xff6d6d6d, 0xff8a8a8a, 0xffc1c1c1, 0xff5c5c5c, 0xff636363, 0xff5c5c5c, 0xff3f3f3f, 0xff505050,
    0xff747474, 0x15000000, 0xa000000, 0x4000000, 0x2000000, 0x1000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2000000,
    0xff434343, 0xffc1c1c1, 0xffc1c1c1, 0xff565656, 0xffffffff, 0xffdfdfdf, 0xff5c5c5c, 0xff6d6d6d, 0xff5c5c5c, 0xff3f3f3f, 0xff464646, 0xff6c6c6c, 0x15000000, 0xa000000,
    0x4000000, 0x2000000, 0x1000000, 0x0, 0x0, 0x0, 0x0, 0x4000000, 0xff040404, 0xffc1c1c1, 0xff565656, 0xffe0e0e0, 0xffffffff, 0xffffffff,
    0xffffffff, 0xffffffff, 0xffdfdfdf, 0xff5c5c5c, 0xff616161, 0xff5c5c5c, 0xff3f3f3f, 0xff545454, 0xff747474, 0x15000000, 0xa000000, 0x3000000, 0x0, 0x0,
    0x1000000, 0xff6c6c6c, 0xff9b9b9b, 0xffc1c1c1, 0xff3f3f3f, 0xfffefefe, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffdfdfdf,
    0xff5c5c5c, 0xff5e5e5e, 0xff777777, 0xff000000, 0xff5b5b5b, 0x16000000, 0x0, 0x0, 0x2000000, 0xff4d4d4d, 0xffc1c1c1, 0xffc1c1c1, 0xff565656, 0xffffffff,
    0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfffefefe, 0xffd8e6e6, 0xff565656, 0xff767676, 0xffc4c4c4, 0xff000000, 0x36000000,
    0x0, 0x0, 0x4000000, 0xff151515, 0xffb3b3b3, 0xff565656, 0xffe0e0e0, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,
    0xffffffff, 0xffffffff, 0xff565656, 0xff7b7b7b, 0xff747474, 0xffbababa, 0xff494949, 0x480e0e0e, 0x0, 0x1000000, 0xff6b6b6b, 0xff828282, 0xffb3b3b3, 0xff3f3f3f,
    0xffeff0f0, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfff9f9f9, 0xff3f3f3f, 0xff797979, 0xffbababa, 0xff060606,
    0x5b000000, 0x3d000000, 0x0, 0x47f7f7f, 0xff4d4d4d, 0xff989898, 0xff9a9a9a, 0xff3d3d3d, 0xff6c6c6c, 0xfffcfcfc, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,
    0xffffffff, 0xffffffff, 0xffffffff, 0xffdfdfdf, 0xff565656, 0xff767676, 0xffcbcbcb, 0xff3d3d3d, 0x58222222, 0x29000000, 0x0, 0x4000000, 0xff0c0c0c, 0xff919191,
    0xff949494, 0xff929292, 0xff7c7c7c, 0xff545454, 0xff3f3f3f, 0xff888888, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff565656, 0xff787878, 0xff737373,
    0xffbababa, 0xf1474747, 0x4b0d0d0d, 0x1e000000, 0x1000000, 0xff6c6c6c, 0xff757575, 0xff8a8a8a, 0xff8e8e8e, 0xff909090, 0xff8d8d8d, 0xff8b8b8b, 0xff929292, 0xff747474,
    0xff535353, 0xff3f3f3f, 0xff8a8a8a, 0xffffffff, 0xffe0e0e0, 0xff3f3f3f, 0xff747474, 0xffbbbbbb, 0xff000000, 0x5a000000, 0x3c000000, 0x15000000, 0x2000000, 0xff424242,
    0xff848484, 0xff838383, 0xff454545, 0xff3a3a3a, 0xff565656, 0xff8b8b8b, 0xff888888, 0xff858585, 0xff888888, 0xff848484, 0xff6d6d6d, 0xff585858, 0xff404040, 0xff757575,
    0xff777777, 0xffcacaca, 0xff2f2f2f, 0x51060606, 0x28000000, 0xa000000, 0x4000000, 0xff060606, 0xff7c7c7c, 0xff6e6e6e, 0xff787878, 0xffeaeaea, 0xff969696, 0xff464646,
    0xff4c4c4c, 0xff5f5f5f, 0xff797979, 0xff828282, 0xff7a7a7a, 0xff787878, 0xff747474, 0xff707070, 0xff6b6b6b, 0xffbebebe, 0xff4e4e4e, 0x4d131313, 0x1d000000, 0x5000000,
    0xff6b6b6b, 0xff6a6a6a, 0xff737373, 0xff4f4f4f, 0xff9c9c9c, 0xffffffff, 0xfff1f1f1, 0xffefefef, 0xffd6d6d6, 0xff838383, 0xff444444, 0xff464646, 0xff767676, 0xff717171,
    0xff6f6f6f, 0xff6b6b6b, 0xffbababa, 0xff040404, 0x5b000000, 0x3d000000, 0x16000000, 0x3000000, 0xff2b2b2b, 0xff6d6d6d, 0xff676767, 0xff464646, 0xfff4f4f4, 0xffeaeaea,
    0xffdadada, 0xffe3e3e3, 0xffededed, 0xffe0e0e0, 0xff808080, 0xff515151, 0xff3b3b3b, 0xff444444, 0xff5c5c5c, 0xff676767, 0xffcbcbcb, 0xff424242, 0x55181818, 0x29000000,
    0xb000000, 0x1000000, 0xff5c5c5c, 0xff000000, 0xff656565, 0xff3f3f3f, 0xfff2f2f2, 0xffd6d6d6, 0xffd6d6d6, 0xffcecece, 0xffc5c5c5, 0xffbcbcbc, 0xff545454, 0xff858585,
    0xff818181, 0xff3b3b3b, 0xff606060, 0xff606060, 0xffbbbbbb, 0xff5a5a5a, 0x4a060606, 0x1e000000, 0x5000000, 0x0, 0x15000000, 0xff6b6b6b, 0xff464646, 0xff010101,
    0xff464646, 0xffa7a7a7, 0xffc4c4c4, 0xffbcbcbc, 0xffb8b8b8, 0xff8a8a8a, 0xff464646, 0xff7c7c7c, 0xff8c8c8c, 0xff535353, 0xff535353, 0xffbbbbbb, 0xff000000, 0x5b000000,
    0x3d000000, 0x16000000, 0x3000000, 0x0, 0x9000000, 0x21000000, 0x3c000000, 0x48000000, 0xff6b6b6b, 0xff464646, 0xff000000, 0xff464646, 0xffa8a8a8, 0xff464646,
    0xff858585, 0xff898989, 0xff414141, 0xff555555, 0xff535353, 0xffc9c9c9, 0xff353535, 0x51060606, 0x29000000, 0xa000000, 0x1000000, 0x0, 0x2000000, 0x9000000,
    0x15000000, 0x1c000000, 0x28000000, 0x3d000000, 0x48000000, 0xff6b6b6b, 0xff464646, 0xff000000, 0xff464646, 0xff969696, 0xff383838, 0xff535353, 0xff535353, 0xffbababa,
    0xff494949, 0x4a060606, 0x1d000000, 0x5000000, 0x0, 0x0, 0x0, 0x1000000, 0x2000000, 0x4000000, 0xa000000, 0x15000000, 0x1c000000, 0x28000000,
    0x3d000000, 0x48000000, 0xff6b6b6b, 0xff464646, 0xff000000, 0xff464646, 0xff555555, 0xff040404, 0x5c050505, 0x3d000000, 0x16000000, 0x3000000, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x1000000, 0x2000000, 0x4000000, 0xa000000, 0x15000000, 0x1c000000, 0x28000000, 0x3d000000, 0x48000000, 0xff6b6b6b,
    0xff000000, 0xff5b5b5b, 0x4e000000, 0x28000000, 0xa000000, 0x1000000, 0x0, 0x0
};

static const QRgb reload_data[] = {
    0x0, 0x0, 0x0, 0x0, 0x0, 0x1000000, 0x4000000, 0xb2e2e2e, 0xff215017, 0xff225118, 0xff1c3f10, 0xff1c4110, 0xff213b14, 0xff1a330d,
    0xff141400, 0x22434343, 0x10000000, 0x9000000, 0x4000000, 0x1000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1000000, 0x5000000,
    0xff1d4613, 0xff2a732f, 0xff65c284, 0xffd8f0d6, 0xffb9e4bd, 0xff82cd91, 0xff3d8f4b, 0xff477d40, 0xff417036, 0xff1e4917, 0xff1b3e0f, 0x1c000000, 0xf000000, 0x6000000,
    0x2000000, 0x0, 0x0, 0x0, 0x0, 0x4ffffff, 0x4000000, 0xff1d4613, 0xff32a85d, 0xffffffff, 0xffb8e2be, 0xff46b670, 0xff2f833c, 0xff1d4613,
    0xff112405, 0xff121600, 0xff212106, 0xff141400, 0xff1e4917, 0xff142b0a, 0x39626262, 0x11000000, 0x6000000, 0x2000000, 0x0, 0x0, 0x4ffffff, 0x2000000,
    0x9000000, 0xff2a732f, 0xffffffff, 0xffb2e0b8, 0xff47b671, 0xff50854a, 0xff141400, 0xff141400, 0x8d686868, 0x836e6e6e, 0x7c737373, 0x78727272, 0xff141400, 0xff142b0a,
    0xff101800, 0x3c6e6e6e, 0x11000000, 0x6000000, 0x0, 0x0, 0x0, 0x4000000, 0xff1d4613, 0xff65c284, 0xffcbe9cb, 0xff63c284, 0xff337f3a, 0xff17320c,
    0x92686868, 0x86747474, 0x7a838383, 0x6c949494, 0x639f9f9f, 0x609c9c9c, 0x618d8d8d, 0x647a7a7a, 0xff142b0a, 0xff141400, 0x1e000000, 0xd000000, 0x0, 0x0,
    0x2000000, 0x8000000, 0xff2a6f2b, 0xffffffff, 0xffa3daae, 0xff31843e, 0xff141400, 0x94676767, 0x847b7b7b, 0x72959595, 0x63b1b1b1, 0x57c7c7c7, 0x4ed4d4d4, 0x4ad5d5d5,
    0x4bc1c1c1, 0x4ea3a3a3, 0x52888888, 0xff141400, 0x4c868686, 0x13000000, 0x3000000, 0x6000000, 0xa000000, 0x11000000, 0xff296c27, 0xffe0f3dd, 0xff63c385, 0xff46914f,
    0xff142908, 0x8c6d6d6d, 0x788a8a8a, 0x64adadad, 0x56cccccc, 0x4be3e3e3, 0x43f3f3f3, 0x3ff6f6f6, 0x3ceeeeee, 0x3cd4d4d4, 0x3fb6b6b6, 0x42969696, 0x3e8b8b8b, 0x22878787,
    0xff141400, 0xff1b3e0f, 0xff284919, 0xff305020, 0xff2fa057, 0xffbee5c1, 0xff55bd7a, 0xff32843f, 0xff192c0b, 0xff161600, 0xff141400, 0xff141400, 0x58b6b6b6, 0x4ad5d5d5,
    0x3ff2f2f2, 0x39ffffff, 0x35ffffff, 0x32f4f4f4, 0x31dfdfdf, 0x30c4c4c4, 0x2eb6b6b6, 0x3bdcdcdc, 0xff141400, 0xff2c7f39, 0xffb0e1b5, 0xffdff3dd, 0xffd4f4d4, 0xff6fc386,
    0xff419652, 0xff378843, 0xff7dcb8f, 0xffceecce, 0xff2c813a, 0xff16310c, 0x61909090, 0x4cbbbbbb, 0x3ee6e6e6, 0xff000000, 0xff171717, 0x2dffffff, 0x29f8f8f8, 0x26f1f1f1,
    0x22e8e8e8, 0x2cf3f3f3, 0x21555555, 0xff141400, 0xff366d2f, 0xff32a65c, 0xff34b464, 0xff319e52, 0xff3a924c, 0xff64c280, 0xff2c813a, 0xff256022, 0xff141400, 0x77646464,
    0x62828282, 0x4ab3b3b3, 0xff000000, 0xffa0a0a0, 0xff474747, 0xff191919, 0x27ffffff, 0x20ffffff, 0x1bffffff, 0x13ffffff, 0x1c7f7f7f, 0x33505050, 0xff141400, 0xff366d2f,
    0xff2f8f46, 0xff33b364, 0xff6ac684, 0xff2c813a, 0xff256022, 0xff141400, 0x7f5a5a5a, 0x6c6e6e6e, 0x55969696, 0xff000000, 0xffb8b8b8, 0xff6d6d6d, 0xff848484, 0xff454545,
    0xff151515, 0x1cffffff, 0x17ffffff, 0x12ffffff, 0x1ac4c4c4, 0x27898989, 0x3e626262, 0xff141400, 0xff407438, 0xff2f8b40, 0xff2d823b, 0xff256022, 0xff141400, 0x7a515151,
    0x6e6c6c6c, 0x5e979797, 0xff000000, 0xffc3c3c3, 0xff6e6e6e, 0xff383838, 0xff484848, 0xff8d8d8d, 0xff4c4c4c, 0xff191919, 0x13ffffff, 0xfffffff, 0x1dededed, 0x20cfcfcf,
    0x309f9f9f, 0x48747474, 0xff141400, 0xff366d2f, 0xff256022, 0xff141400, 0x79505050, 0x6e6c6c6c, 0x5f969696, 0xff000000, 0xffb5b5b5, 0xff6f6f6f, 0xff353535, 0xff222222,
    0xff292929, 0xff4d4d4d, 0xff8d8d8d, 0xff464646, 0xff151515, 0x9ffffff, 0x2affffff, 0x21efefef, 0x29d9d9d9, 0x37ababab, 0x4c7f7f7f, 0xff141400, 0xff141400, 0x75575757,
    0x6c6c6c6c, 0x5f969696, 0xff282828, 0xff9b9b9b, 0xff686868, 0xff454545, 0xff454545, 0xff2a2a2a, 0xff2f2f2f, 0xff2e2e2e, 0xff464646, 0xff717171, 0xff2c2c2c, 0xff0a0a0a,
    0x25ffffff, 0x23ffffff, 0x29f2f2f2, 0x31dfdfdf, 0x3fb6b6b6, 0x528f8f8f, 0x607a7a7a, 0x637e7e7e, 0x5c9b9b9b, 0x53c7c7c7, 0xff000000, 0xff000000, 0xff030303, 0xff000000,
    0xff757575, 0xff3c3c3c, 0xff515151, 0xff242424, 0xff010101, 0xff000000, 0xff000000, 0xff000000, 0x8ffffff, 0x28ffffff, 0x2cffffff, 0x32f4f4f4, 0x39e4e4e4, 0x44cacaca,
    0x4eb7b7b7, 0x51b9b9b9, 0x4fd1d1d1, 0x4eebebeb, 0x4ff8f8f8, 0x53ffffff, 0x58ffffff, 0xff000000, 0xff898989, 0xff414141, 0xff575757, 0xff252525, 0x0, 0x0,
    0x4ffffff, 0x0, 0x0, 0x32ffffff, 0xff000000, 0x34ffffff, 0x39fafafa, 0x40efefef, 0x45e8e8e8, 0x49eaeaea, 0x4cf1f1f1, 0x4ffbfbfb, 0x52ffffff, 0x57ffffff,
    0x5bffffff, 0xff000000, 0xffa3a3a3, 0xff3b3b3b, 0xff515151, 0xff1a1a1a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff000000, 0xff000000,
    0x3cffffff, 0x41ffffff, 0x46fbfbfb, 0x4afbfbfb, 0x4dffffff, 0x52ffffff, 0x56ffffff, 0x5bffffff, 0xff000000, 0xffafafaf, 0xff6a6a6a, 0xff434343, 0xff404040, 0xff070707,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x19ffffff, 0xff000000, 0xff000000, 0xff000000, 0x49ffffff, 0x4dffffff, 0x51ffffff, 0x56ffffff,
    0xff000000, 0xff000000, 0xffafafaf, 0xff848484, 0xff424242, 0xff484848, 0xff141414, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x1cffffff, 0xff080808, 0xff222222, 0xff0b0b0b, 0xff1c1c1c, 0xff000000, 0xff000000, 0xff797979, 0xffafafaf, 0xff828282, 0xff505050, 0xff505050, 0xff2c2c2c,
    0xff070707, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff000000, 0xff1f1f1f, 0xff4b4b4b,
    0xff6a6a6a, 0xff818181, 0xffa5a5a5, 0xff5e5e5e, 0xff424242, 0xff505050, 0xff0d0d0d, 0xff000000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x13ffffff, 0xff0a0a0a, 0xff121212, 0xff191919, 0xff1f1f1f, 0xff212121, 0xff1d1d1d, 0xff000000,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
};

static struct EmbedImage
{
    int width, height, depth;
    const unsigned char *data;
    int numColors;
    const QRgb *colorTable;
    bool alpha;
    const char *name;
} embed_image_vec[] = {
    { 24, 24, 32, (const unsigned char *)fileimport_data, 0, 0, TRUE, "fileimport" },
    { 24, 24, 32, (const unsigned char *)fileopen_data, 0, 0, TRUE, "fileopen" },
    { 22, 22, 32, (const unsigned char *)filesave_data, 0, 0, TRUE, "filesave" },
    { 22, 22, 32, (const unsigned char *)reload_data, 0, 0, TRUE, "reload" },
    { 0, 0, 0, 0, 0, 0, 0, 0 }
};

static const QImage &qembed_findImage(const QString &name)
{
    static Q3Dict<QImage> dict;
    QImage *img = dict.find(name);
    if (!img)
    {
        for (int i = 0; embed_image_vec[i].data; i++)
        {
            if (strcmp(embed_image_vec[i].name, name.latin1()) == 0)
            {
                img = new QImage((uchar *)embed_image_vec[i].data,
                                 embed_image_vec[i].width,
                                 embed_image_vec[i].height,
                                 embed_image_vec[i].depth,
                                 (QRgb *)embed_image_vec[i].colorTable,
                                 embed_image_vec[i].numColors,
                                 QImage::BigEndian);
                if (embed_image_vec[i].alpha)
                    img->setAlphaBuffer(TRUE);
                dict.insert(name, img);
                break;
            }
        }
        if (!img)
        {
            static QImage dummy;
            return dummy;
        }
    }
    return *img;
}

#endif
