!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Aufbau einer Grundzelle von Klopapier
! The output is used when producing a photorealistic 
! image of loo paper.
! Author: Sergio Leseduarte
! (C) 2002 by VirCinity IT Consulting
! Korrektur: Andrey Vishnevsky
! UniBw, IfM
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

/file,zugmesh
/prep7

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!/output,execAuto,dat
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

! default thickness (interbump space)
thickn = 0.1
MySmrtSize = 5
MyExpnd = 3.5

! read in some parameters:
! width, height, numpoint (number of nodes
! for a paper bump), numelems (in a bump), 
! numbumps, and name of material model file (string in variable PapProp)
/input,qparams.log

/input,%PapProp%,USER_MPL,../MATERIALS

! coords keeps node coordinates and paper thickness
*dim,coords,array,4,numpoint
! connec keeps the mesh connectivity
*dim,connec,array,4,numelems

! data for coords in coords.dat
*vread,coords(1,1),coords,dat,,IJK,4,numpoint
(4E13.0)

! data for connec in connec.dat
*vread,connec(1,1),connec,dat,,IJK,4,numelems
(4f10.0)

! for visuallisation purposes shell63 is good enough
! (and traction simulation)
et,1,shell43


! build up mesh nodes
*do,node,1,numpoint,1
   n,node,coords(1,node),coords(2,node),coords(3,node)
*enddo

! sidelen{x,y}: bump X, Y dimensions
*get,sidelenx,node,,mxloc,x
*get,sideleny,node,,mxloc,y

! bit of the same... in fact this is redundant,
! because the bump profile is perfectly rectangular....
! well, or elliptic
!nsel,s,loc,x,sidelenx-0.0001,sidelenx+0.0001
!*get,sideleny,node,,mxloc,y
!nsel,r,loc,y,sideleny-0.0001,sideleny+0.0001
!*get,nodeext,node,,num,max

! zshift: bump height
nsel,s,node,,sidelenx
*get,zshift,node,,mxloc,z
alls

! number of elements on the outer lines
!nsel,s,loc,x,sidelenx-0.0001,sidelenx+0.0001
!*get,nsidex,node,,count
!nsel,s,loc,y,sideleny-0.0001,sideleny+0.0001
!*get,nsidey,node,,count
alls

! this was relevant when the input distances were not in milimeters
factor = 1

! build up the mesh
*do,elem,1,numelems,1
   r,elem,factor*coords(4,connec(1,elem)),factor*coords(4,connec(2,elem)),factor*coords(4,connec(3,elem)),factor*coords(4,connec(4,elem))
   real,elem
   e,connec(1,elem),connec(2,elem),connec(3,elem),connec(4,elem)
*enddo


! we want to merge entities
nummrg,all
numcmp,node
numcmp,elem

cm,bump,elem

alls
!********************************* New
!calculate average thickness and length of the elements
!*VScFun,MySumThick,Sum,coords(4,1)
!MyAvThick=MySumThick/numpoint
MyAvThick = 0
*do,mypoint,1,numpoint,1
   MyAvThick = MyAvThick + coords(4,mypoint)
*enddo
MyAvThick = MyAvThick/numpoint
!MySumThick=

MySumElVol=0

*Do,MyElem,1,numelems,1
   *Get,MyCurrElVol,Elem,MyElem,Volu
   MySumElVol=MySumElVol+MyCurrElVol
*EndDo

MyAvElLen=(MySumElVol/numelems/MyAvThick)**(1/2)

MyElem=
MySumElVol=
!********************************* New


! arrays for bump positions
! data is in {x, y}points.dat
*dim,xpoints,array,numbumps
*dim,ypoints,array,numbumps
*vread,xpoints(1),xpoints.dat
(F8.0)
*vread,ypoints(1),ypoints.dat
(F8.0)

! make a big rectangle for the basic cell
! at a Z-height that matches that of the bump
*get,amax1,area,,num,max
numstr,area,amax1
wpoffs,,,zshift
blc4,0,0,width,height ! amax1+1
wpoffs,,,-zshift

lsel,none

!*use,creaLine.mac,sidelenx,sideleny

! creates lines for the exterior nodes
! of a bump
*use,domainLine1.mac

cm,contour,line

! copy this outer lines to the positions of the bumps
*do,point,1,numbumps,1
    cmsel,s,contour
    lgen,2,all,,,xpoints(point),ypoints(point)
    cmsel,u,contour
    al,all
   ! wpoffs,xpoints(point),ypoints(point)
   ! pcirc,0,iradius,0,360 ! amax1 + 1 + point
   ! wpoffs,-xpoints(point),-ypoints(point)
*enddo
csys,0

! use agen and perform boolean operation
! the result is an flat area for the paper
! between bumps
asel,s,area,,amax1+2,amax1+numbumps+1,1
cm,areadim,area
asel,a,area,,amax1+1
lsla
ksll
asba,amax1+1,areadim,sepo,delete,delete

!********************************* New
cmsel,s,contour
CMDele,contour
LDele,All,0
!********************************* New
realnorm = (numbumps+1)*numelems+1
*If,MySmrtSize,GE,1,Then
   ! set divisions in internal lines
   lsla
   lsel,u,loc,y,0
   lsel,u,loc,x,0
   lsel,u,loc,y,height
   lsel,u,loc,x,width
   lesize,all,,,1  ! (nsidex-1)/2 ! Provisional @@@

   type,1
   lsla
   smrtsize,MySmrtSize   !5  !,,3.5
   mopt,expnd,MyExpnd    !3.5 ! 3.5
   ! we use the default thickness here
   r,realnorm,factor*MyAvThick,factor*MyAvThick,factor*MyAvThick,factor*MyAvThick
   real,realnorm

   ! rotate element CSs with esys (proper for the material model)
   local,11,0
   esys,11
   amesh,all
*else
   !define tne number of element
   Type,1

   !switch off smart size
   SmrtSize,Off

   !define the division of all lines
   LeSize,All,,,1,,1
   !define the division of boundary lines
   LSel,S,Loc,Y,0,
   LSel,A,Loc,X,0,
   LSel,A,Loc,Y,height,
   LSel,A,Loc,X,width,
   LeSize,All,MyAvElLen,,,,1

   Alls

   !create real constant
   R,realnorm,factor*MyAvThick,factor*MyAvThick,factor*MyAvThick,factor*MyAvThick
   Real,realnorm
   !arrange the element coordinate system
   Local,11,0
   ESys,11

   !meshing
   AMesh,All

   csys,0
*endif

cm,restdom,area
alls

! and now generate as many bumps as needed
*do,point,1,numbumps,1
   *get,nmax1,node,,num,max
   egen,2,nmax1,bump,,,,,,,,xpoints(point),ypoints(point),0.0
*enddo

! delete original bump used as a model
cmsel,s,bump
nsle
edele,all
ndele,all
alls


! crop protruding entities:
! some bumps may have to be cropped
nsel,s,loc,x,-sidelenx,0
!nsel,a,loc,x,width ! sometimes this is necessary in practice
nsel,a,loc,x,width,width+sidelenx
nsel,a,loc,y,-sideleny,0
!nsel,a,loc,y,height
nsel,a,loc,y,height,height+sideleny

esln,s,1
nsle
edele,all
alls
nsle
nsel,inve
ndele,all
alls

! merge entities
nummrg,all
numcmp,node
numcmp,elem

enorm,1

! and output results: zugqmesh.dat
! first get node locations
*get,numnodes,node,,count
*get,numelems,elem,,count

*stat,numnodes
*stat,numelems

! get node positions
*dim,nodex,array,numnodes
*dim,nodey,array,numnodes
*dim,nodez,array,numnodes
*vget,nodex(1),node,1,loc,x
*vget,nodey(1),node,1,loc,y
*vget,nodez(1),node,1,loc,z

! get connectivity
*dim,connect1,array,numelems
*dim,connect2,array,numelems
*dim,connect3,array,numelems
*dim,connect4,array,numelems
*vget,connect1(1),elem,1,node,1
*vget,connect2(1),elem,1,node,2
*vget,connect3(1),elem,1,node,3
*vget,connect4(1),elem,1,node,4

!!!!!!!!!!!!!!!!!!!!!!!!!
!/output
!!!!!!!!!!!!!!!!!!!!!!!!!

! and now dump mesh and connectivity to file zug_mesh.dat
! and zug_conn.dat
/output,zug_mesh,dat
*vwrite,numnodes
(f7.0)
*vwrite,nodex(1),nodey(1),nodez(1)
(f10.3,'   ',f10.3,'   ',f10.3)
/output

/output,zug_conn,dat
*vwrite,numelems
(f7.0)
*vwrite,connect1(1),connect2(1),connect3(1),connect4(1)
(f7.0,'   ',f7.0,'   ',f7.0,'   ',f7.0)
/output

! save parameters for future usage...
parsav,all,info,parm
save
fini

