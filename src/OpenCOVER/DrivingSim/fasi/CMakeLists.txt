IF(NOT COVISE_BUILD_DRIVINGSIM)
  RETURN()
ENDIF()

OPTION (COVISE_USE_XENOMAI "Use Xenomai" ON)
COVISE_FIND_PACKAGE(Xenomai)
if( NOT XENOMAI_FOUND OR NOT COVISE_USE_XENOMAI)
 RETURN()
endif( NOT XENOMAI_FOUND OR NOT COVISE_USE_XENOMAI)

USING(XERCESC)
USING(BOOST)

COVISE_FIND_PACKAGE(V8)

SET(HEADERS
 fasi.h
  FourWheelDynamicsRealtime.h
)
SET(SOURCES
 fasi.cpp
  FourWheelDynamicsRealtime.cpp
)


IF(WIN32)
  RETURN()
ENDIF(WIN32)

INCLUDE_DIRECTORIES(
   ../VehicleUtil
    ${OPENSCENEGRAPH_INCLUDE_DIRS}
   ${V8_INCLUDE_DIR}
)
 
 ADD_DEFINITIONS(${XENOMAI_DEFINITIONS})

 INCLUDE_DIRECTORIES(
   ${XENOMAI_INCLUDE_DIR}
   ../gaalet/include

 )



ADD_COVISE_EXECUTABLE(fasi ${SOURCES} ${HEADERS})
if(COVISE_USE_MERCURY)
TARGET_LINK_LIBRARIES(fasi coOpenVehicleUtil ${OPENSCENEGRAPH_LIBRARIES} ${XENOMAI_LIBRARY_ALCHEMY} ${XENOMAI_LIBRARY_COPPERPLATE}) 
else(COVISE_USE_MERCURY)
TARGET_LINK_LIBRARIES(fasi coOpenVehicleUtil ${OPENSCENEGRAPH_LIBRARIES} ${XENOMAI_LIBRARY_NATIVE} ${XENOMAI_LIBRARY_RTDM}) 
endif(COVISE_USE_MERCURY)
ADD_COVISE_COMPILE_FLAGS(fasi "-g0 -O3 -w -fno-strict-aliasing")

COVISE_INSTALL_TARGET(fasi)


