COVISE_FIND_PACKAGE(MPI)
IF(NOT MPI_FOUND)
   RETURN()
ENDIF(NOT MPI_FOUND)

USING(VTK optional)

IF(NOT OPENSCENEGRAPH_FOUND)
  RETURN()
ENDIF()

include_directories(${MPI_INCLUDE_PATH})
set(CMAKE_CXX_COMPILE_FLAGS "${CMAKE_CXX_COMPILE_FLAGS} ${MPI_COMPILE_FLAGS}")
if(APPLE)
   # otherwise, linker tries to resolve transitively linked CUDA
   set(lflag "-Wl,-flat_namespace")
   STRING(REGEX REPLACE "${lflag}[ ]+|${lflag}$" "" MPI_LINK_FLAGS "${MPI_LINK_FLAGS}")
endif()
set(CMAKE_CXX_LINK_FLAGS "${CMAKE_CXX_LINK_FLAGS} ${MPI_LINK_FLAGS}")

SET(EXTRA_LIBS ${EXTRA_LIBS} ${MPI_LIBRARIES} ${MPI_CXX_LIBRARIES})
ADD_DEFINITIONS(-DMPI_COVER)

SET(SOURCES
  ../main/OpenCOVERMain.cpp
)

IF(APPLE)
   SET(EXTRA_LIBS ${EXTRA_LIBS} "-framework AppKit")
   set(SOURCES ${SOURCES} ../main/osx-util.mm)
ENDIF(APPLE)

ADD_COVISE_MODULE(Renderer OpenCOVER.mpi)
COVISE_ADJUST_OUTPUT_DIR(OpenCOVER.mpi "" bin)

TARGET_LINK_LIBRARIES(OpenCOVER.mpi  coOpenCOVER
      ${COVISE_VRBCLIENT_LIBRARY} ${COVISE_GRMSG_LIBRARY}
      ${COVISE_UTIL_LIBRARY}
      ${EXTRA_LIBS} ${CMAKE_THREAD_LIBS_INIT})
COVISE_INSTALL_TARGET(OpenCOVER.mpi)

