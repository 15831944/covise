<phong>
<uniform name="Bumpiness" type="float" value="0.81"/>
<uniform name="Kr" type="float" value="300" min="1" max="500"/>
<vertexProgram>
  
  varying vec3 normal, lightDir, eyeVec;
     
        
     
  void main( void )
  {
        normal = gl_NormalMatrix * gl_Normal;
     
     	vec3 vVertex = vec3(gl_ModelViewMatrix * gl_Vertex);
     
     	lightDir = vec3(gl_LightSource[0].position.xyz - vVertex);
     	eyeVec = -vVertex;
     
#ifdef __GLSL_CG_DATA_TYPES
gl_ClipVertex = gl_ModelViewMatrix*gl_Vertex;
#endif
	gl_Position = ftransform();	
  }
  </vertexProgram>
  <fragmentProgram>
   
   varying vec3 normal, lightDir, eyeVec;
  uniform float Bumpiness;
  uniform float Kr;
   void main( void )
   {
      vec4 final_color = vec4(0,0,0,1);
      							
      	vec3 N = normalize(normal);
      	vec3 L = normalize(lightDir);
      	
      	float lambertTerm = dot(N,L);
      	
      		final_color +=   gl_FrontMaterial.diffuse *   lambertTerm;	
      		
      		vec3 E = normalize(eyeVec);
      		vec3 R = reflect(-L, N);
      		float specular = pow( max(dot(R, E), 0.0), 
      		                 Kr);
      		final_color += vec4(1,1,1,1)*specular*Bumpiness;	
      	
      
	gl_FragColor = final_color;	
          
   }
  </fragmentProgram></phong>